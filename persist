持久化

支持两种类型的持久化
1.RDB
2.AOF


RDB
 把当前进程数据生成快照存到硬盘。可以手动触发也可以自动触发。
 
 触发机制
 
 手动触发可以通过save和bgsave。
 ·save命令： 阻塞当前Redis服务器， 直到RDB过程完成为止， 对于内存
比较大的实例会造成长时间阻塞， 线上环境不建议使用。 

 ·bgsave命令：Redis进程执行fork操作创建子进程， RDB持久化过程由子
进程负责， 完成后自动结束。 阻塞只发生在fork阶段， 一般时间很短。

1） 使用save相关配置， 如“save m n”。 表示m秒内数据集存在n次修改
时， 自动触发bgsave。
2） 如果从节点执行全量复制操作， 主节点自动执行bgsave生成RDB文件并发送给从节点。
3） 执行debug reload命令重新加载Redis时， 也会自动触发save操作。
4） 默认情况下执行shutdown命令时， 如果没有开启AOF持久化功能则自动执行bgsave。

RDB文件的处理
保存： RDB文件保存在dir配置指定的目录下， 文件名通过dbfilename配
置指定。 可以通过执行config set dir{newDir}和config set
dbfilename{newFileName}运行期动态执行， 当下次运行时RDB文件会保存到
新目录。

压缩： Redis默认采用LZF算法对生成的RDB文件做压缩处理， 压缩后的
文件远远小于内存大小， 默认开启， 可以通过参数config set
rdbcompression{yes|no}动态修改。

校验： 如果Redis加载损坏的RDB文件时拒绝启动， 并打印如下日志：
# Short read or OOM loading DB. Unrecoverable error, aborting now.
这时可以使用Redis提供的redis-check-dump工具检测RDB文件并获取对应的错误报告。

RDB的优点：
·RDB是一个紧凑压缩的二进制文件， 代表Redis在某个时间点上的数据
快照。 非常适用于备份， 全量复制等场景。 比如每6小时执行bgsave备份，
并把RDB文件拷贝到远程机器或者文件系统中（ 如hdfs） ， 用于灾难恢复。
·Redis加载RDB恢复数据远远快于AOF的方式。
RDB的缺点：
·RDB方式数据没办法做到实时持久化/秒级持久化。 因为bgsave每次运
行都要执行fork操作创建子进程， 属于重量级操作， 频繁执行成本过高。
·RDB文件使用特定二进制格式保存， Redis版本演进过程中有多个格式
的RDB版本， 存在老版本Redis服务无法兼容新版RDB格式的问题。

AOF

以独立日志的方式记录每次写命令，
重启时再重新执行AOF文件中的命令达到恢复数据的目的。 AOF的主要作用
是解决了数据持久化的实时性， 目前已经是Redis持久化的主流方式.

通过设置 appendonly yes开启 appendfilename设置文件名


流程如下：
1） 所有的写入命令会追加到aof_buf（ 缓冲区） 中。
2） AOF缓冲区根据对应的策略向硬盘做同步操作。
3） 随着AOF文件越来越大， 需要定期对AOF文件进行重写， 达到压缩
的目的。
4） 当Redis服务器重启时， 可以加载AOF文件进行数据恢复

重写机制

重写后的AOF文件为什么可以变小？ 有如下原因：
1） 进程内已经超时的数据不再写入文件。
2） 旧的AOF文件含有无效命令， 如del key1、 hdel key2、 srem keys、 set
a111、 set a222等。 重写使用进程内数据直接生成， 这样新的AOF文件只保
留最终数据的写入命令。
3） 多条写命令可以合并为一个， 如： lpush list a、 lpush list b、 lpush list
c可以转化为： lpush list a b c。 为了防止单条命令过大造成客户端缓冲区溢
出， 对于list、 set、 hash、 zset等类型操作， 以64个元素为界拆分为多条。

AOF重写过程可以手动触发和自动触发：
·手动触发： 直接调用bgrewriteaof命令。
·自动触发： 根据auto-aof-rewrite-min-size和auto-aof-rewrite-percentage参
数确定自动触发时机。
332·auto-aof-rewrite-min-size： 表示运行AOF重写时文件最小体积， 默认
为64MB。
·auto-aof-rewrite-percentage： 代表当前AOF文件空间
（ aof_current_size） 和上一次重写后AOF文件空间（ aof_base_size） 的比
值。
自动触发时机=aof_current_size>auto-aof-rewrite-minsize&&（ aof_current_size-aof_base_size） /aof_base_size>=auto-aof-rewritepercentage
其中aof_current_size和aof_base_size可以在info Persistence统计信息中查
看。
当触发AOF重写时

